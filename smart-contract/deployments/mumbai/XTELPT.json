{
  "address": "0x2f690b51c29714243e63aB4bc1d86FeF63B62eD5",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "RequestedID",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllVolun",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Campaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "volunteer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Meeting",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "UserProfile",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "profilePic",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "avaliable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "volun",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "becomeVolun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pic",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "createHost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "createSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pic",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllHost",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUser",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllVolun",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prof",
          "type": "address"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "volunteer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.campaign[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prof",
          "type": "address"
        }
      ],
      "name": "getMeeting",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.meeting[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAdd",
          "type": "address"
        }
      ],
      "name": "getProfile",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rating",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "profilePic",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "avaliable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "volun",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.profile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_host",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "joinMeeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meetingIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meetingNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "recentCampaignCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unVolun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "v_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6f0b12cd4d4d861cb8e8fdfad4e8ce88126300798af29283a858add80b0542e4",
  "receipt": {
    "to": null,
    "from": "0xe431d300d25eDB84d32f67b7bdaeC56F03af4d03",
    "contractAddress": "0x2f690b51c29714243e63aB4bc1d86FeF63B62eD5",
    "transactionIndex": 13,
    "gasUsed": "3750443",
    "logsBloom": "0x
    "blockHash": "0x92e53c95513777dd4ef4c65c8ae72b0a254a779294156b217337f51412f6bb32",
    "transactionHash": "0x6f0b12cd4d4d861cb8e8fdfad4e8ce88126300798af29283a858add80b0542e4",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 28889154,
        "transactionHash": "0x6f0b12cd4d4d861cb8e8fdfad4e8ce88126300798af29283a858add80b0542e4",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e431d300d25edb84d32f67b7bdaec56f03af4d03",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000004410b8f40b44e70000000000000000000000000000000000000000000000000a2a5edda0a791660000000000000000000000000000000000000000000027093518e1a32bf296e300000000000000000000000000000000000000000000000009e64e24ac9c4c7f000000000000000000000000000000000000000000002709355cf25c1ffddbca",
        "logIndex": 84,
        "blockHash": "0x92e53c95513777dd4ef4c65c8ae72b0a254a779294156b217337f51412f6bb32"
      }
    ],
    "blockNumber": 28889154,
    "cumulativeGasUsed": "6272208",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "8043b6dddeba46222a492d08631ddb2a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedID\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllVolun\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Campaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"volunteer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Meeting\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserProfile\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profilePic\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"avaliable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"volun\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeVolun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"createHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"createSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllHost\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUser\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVolun\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prof\",\"type\":\"address\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"volunteer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prof\",\"type\":\"address\"}],\"name\":\"getMeeting\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.meeting[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAdd\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profilePic\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"avaliable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"volun\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.profile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_host\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"joinMeeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meetingIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meetingNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recentCampaignCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unVolun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"v_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"becomeVolun()\":{\"details\":\"This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign \"},\"checkUpkeep(bytes)\":{\"details\":\"This is the function that the Chainlink Keeper nodes call they look for `upkeepNeeded` to return True. the following should be true for this to return true: 1. It makes sure that the campaign or meeting is not yet completed 2. The time interval has passed for either meeting or campaign.\"},\"constructor\":{\"details\":\"constructor used to assign values that will not change\"},\"createCampaign()\":{\"details\":\"This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign\"},\"createHost(uint256,string,string,string)\":{\"details\":\"This function `createHost` any body can call this functions and the senders profile would be set to that of a `Host`\"},\"createSchedule(uint256,uint256)\":{\"details\":\"This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier after which a Host can create a meeting with some parameters like time and fee needed\"},\"createUser(uint256,string,string,string)\":{\"details\":\"This function `createUser` any body can call this functions and the senders profile would be set to that of a `User`\"},\"endCampaign(address,uint256)\":{\"details\":\"This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign\"},\"joinMeeting(address,uint256)\":{\"details\":\"This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier after which the meeting ID is specified and the user would be assigned to the meeting\"},\"performUpkeep(bytes)\":{\"details\":\"Once `checkUpkeep` is returning `true`, this function is called\"},\"unVolun()\":{\"details\":\"This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"meetingNum()\":{\"notice\":\"Getter Functions \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/XTELPT.sol\":\"XTELPT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/XTELPT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\ninterface KeeperCompatibleInterface {\\r\\n    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\r\\n    function performUpkeep(bytes calldata performData) external;\\r\\n}\\r\\n\\r\\ncontract XTELPT is  KeeperCompatibleInterface {\\r\\n\\r\\n    enum XTELPState {\\r\\n        OPEN,\\r\\n        CLOSED\\r\\n    }\\r\\n\\r\\n    uint public counter;    \\r\\n    // Use an i_interval in seconds and a timestamp to slow execution of Upkeep\\r\\n    uint private i_interval;\\r\\n    uint public s_lastTimeStamp;\\r\\n    uint public v_lastTimeStamp;\\r\\n\\r\\n\\r\\n    /* string User Types */\\r\\n    string userType = \\\"User\\\";\\r\\n    string hostType = \\\"Host\\\";\\r\\n    string volunType = \\\"Volun\\\";\\r\\n\\r\\n\\r\\n    /* Campaign and Meeting variables */\\r\\n\\r\\n    mapping(address => campaign[]) public Campaign;\\r\\n\\r\\n    mapping(address => meeting[]) public Meeting;\\r\\n\\r\\n    uint256 public campaignIndex;\\r\\n    \\r\\n    uint256 public meetingIndex;    \\r\\n    \\r\\n    /* User profile mapping */\\r\\n    mapping(address => profile) public UserProfile;\\r\\n\\r\\n    /* State mapping */\\r\\n    mapping(address => XTELPState) private s_xtelpState;\\r\\n    mapping(address => XTELPState) private volunState;\\r\\n\\r\\n    /* User Types Arrays */\\r\\n    address [] public AllHost;\\r\\n\\r\\n    address [] public AllVolun;\\r\\n    \\r\\n    address [] public AllUser;\\r\\n\\r\\n    address [] public recentCampaignCreator;\\r\\n\\r\\n\\r\\n    /* Struct */\\r\\n    struct profile {\\r\\n        address addr;\\r\\n        string name;\\r\\n        string role;\\r\\n        uint256 rating;\\r\\n        string bio;\\r\\n        string profilePic;\\r\\n        bool avaliable;\\r\\n        bool volun;\\r\\n    }\\r\\n\\r\\n    struct meeting {\\r\\n        address host;\\r\\n        address user;\\r\\n        uint256 time;\\r\\n        uint256 fee;\\r\\n        bool completed;\\r\\n    }\\r\\n    \\r\\n    struct campaign {\\r\\n        address volunteer;\\r\\n        address user;\\r\\n        uint256 start_time;\\r\\n        uint256 end_time;\\r\\n        uint256 fee;\\r\\n        bool completed;\\r\\n    }\\r\\n\\r\\n    /* Modifiers */\\r\\n    modifier onlyHost  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"Host\\\")), \\\"NOT A HOST\\\");\\r\\n        _;\\r\\n    }\\r\\n   \\r\\n    modifier onlyVolun  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"Host\\\")) && UserProfile[msg.sender].avaliable == true , \\\"NOT A VOLUNTEER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyUser  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"User\\\")), \\\"NOT A USER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    event RequestedID(uint256 indexed requestId);\\r\\n\\r\\n    /**\\r\\n     * @dev constructor used to assign values that will not change\\r\\n     */\\r\\n    constructor() {\\r\\n      \\r\\n        s_lastTimeStamp = block.timestamp;\\r\\n        v_lastTimeStamp = block.timestamp;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n        volunState[msg.sender] = XTELPState.OPEN;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createUser` any body can call this functions and the senders profile\\r\\n     * would be set to that of a `User`\\r\\n     */\\r\\n    function createUser(uint256 _rating, string memory _name, string memory _pic, string memory _bio) public {\\r\\n        AllUser.push(msg.sender);\\r\\n        UserProfile[msg.sender].addr = msg.sender;\\r\\n        UserProfile[msg.sender].name = _name;\\r\\n        UserProfile[msg.sender].rating = _rating;\\r\\n        UserProfile[msg.sender].role = userType;\\r\\n        UserProfile[msg.sender].profilePic = _pic;\\r\\n        UserProfile[msg.sender].bio = _bio;\\r\\n    }\\r\\n\\r\\n    \\r\\n    /**\\r\\n     * @dev This function `createHost` any body can call this functions and the senders profile\\r\\n     * would be set to that of a `Host`\\r\\n     */\\r\\n    function createHost(uint256 _rating, string memory _name, string memory _pic, string memory _bio) public {  \\r\\n        AllHost.push(msg.sender);\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        UserProfile[msg.sender].addr = msg.sender;\\r\\n        UserProfile[msg.sender].name = _name;\\r\\n        UserProfile[msg.sender].rating = _rating;\\r\\n        UserProfile[msg.sender].role = hostType;\\r\\n        UserProfile[msg.sender].profilePic = _pic;\\r\\n        UserProfile[msg.sender].bio = _bio;\\r\\n    }\\r\\n\\r\\n     /**\\r\\n     * @dev This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign \\r\\n     */\\r\\n    function becomeVolun() public onlyHost {\\r\\n        AllVolun.push(msg.sender);\\r\\n       \\r\\n        UserProfile[msg.sender].volun = true;\\r\\n        UserProfile[msg.sender].avaliable = true;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign \\r\\n     */\\r\\n    function unVolun() public onlyHost {       \\r\\n        UserProfile[msg.sender].volun = false;\\r\\n        UserProfile[msg.sender].avaliable = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * after which a Host can create a meeting with some parameters like time and fee needed\\r\\n     */\\r\\n    function createSchedule(uint256 _time, uint256 _fee) public onlyHost {\\r\\n        meetingIndex ++;\\r\\n        \\r\\n        meeting memory NewMeeting;\\r\\n        NewMeeting.host = msg.sender;\\r\\n        NewMeeting.time = block.timestamp + _time * 60;\\r\\n        NewMeeting.fee = _fee;\\r\\n\\r\\n        i_interval = _time;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        Meeting[msg.sender].push(NewMeeting);\\r\\n      \\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which the meeting ID is specified and the user would be assigned to the meeting\\r\\n     */\\r\\n    function joinMeeting(address _host, uint256 _id) public onlyUser {\\r\\n        Meeting[_host][_id].user = msg.sender;\\r\\n    } \\r\\n\\r\\n    /**\\r\\n     * @dev This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which any avaliable volunteer would be assigned to the campaign\\r\\n     */\\r\\n    function createCampaign() public onlyUser {\\r\\n        campaignIndex ++;\\r\\n\\r\\n        campaign memory NewCampaign;\\r\\n        NewCampaign.user = msg.sender;\\r\\n        NewCampaign.start_time = block.timestamp;\\r\\n        NewCampaign.fee = 0;\\r\\n\\r\\n        i_interval = 1;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        for(uint i = 0; i < AllVolun.length; i++){\\r\\n            if(UserProfile[AllVolun[i]].avaliable == true){\\r\\n                NewCampaign.volunteer = AllVolun[i];\\r\\n                UserProfile[AllVolun[i]].avaliable = false;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        Campaign[msg.sender].push(NewCampaign);\\r\\n      \\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which any avaliable volunteer would be assigned to the campaign\\r\\n     */\\r\\n    function endCampaign(address _user, uint256 _id) public onlyUser {\\r\\n       Campaign[_user][_id].completed = true;\\r\\n       Campaign[_user][_id].end_time = block.timestamp;\\r\\n    }\\r\\n\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This is the function that the Chainlink Keeper nodes call\\r\\n     * they look for `upkeepNeeded` to return True.\\r\\n     * the following should be true for this to return true:\\r\\n     * 1. It makes sure that the campaign or meeting is not yet completed\\r\\n     * 2. The time interval has passed for either meeting or campaign.\\r\\n     */\\r\\n   \\r\\n   function checkUpkeep(bytes memory /* checkData */) public view override returns ( bool upkeepNeeded,\\r\\n    bytes memory /* performData */  ) {\\r\\n        \\r\\n        for (uint i = 0; i < AllHost.length; i++) {\\r\\n            for (uint j = 0; j < Meeting[AllHost[i]].length; j++) {\\r\\n                if( block.timestamp >= Meeting[AllHost[i]][j].time && Meeting[AllHost[i]][j].completed == false){\\r\\n                    bool isOpen = XTELPState.OPEN == s_xtelpState[msg.sender];\\r\\n                    bool timePassed = ((block.timestamp - s_lastTimeStamp) >  Meeting[AllHost[i]][j].time);\\r\\n                    upkeepNeeded = (isOpen && timePassed);\\r\\n                }\\r\\n                \\r\\n            }\\r\\n        }\\r\\n       \\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Once `checkUpkeep` is returning `true`, this function is called\\r\\n     */\\r\\n    function performUpkeep(bytes calldata /*performData*/) external override {\\r\\n\\r\\n        for (uint i = 0; i < AllHost.length; i++) {\\r\\n            for (uint j = 0; j < Meeting[AllHost[i]].length; j++) {\\r\\n               (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n                require(upkeepNeeded, \\\"Doesn't meet requirement for UpKeep\\\");\\r\\n                Meeting[AllHost[i]][j].completed = true;\\r\\n                s_xtelpState[AllHost[i]] = XTELPState.CLOSED;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        \\r\\n        \\r\\n    }\\r\\n   \\r\\n   \\r\\n    /** Getter Functions */\\r\\n\\r\\n    function meetingNum() public view returns (uint256) {\\r\\n        return meetingIndex;\\r\\n    }\\r\\n    \\r\\n    function campaignNum() public view returns (uint256) {\\r\\n        return campaignIndex;\\r\\n    }\\r\\n\\r\\n    function getMeeting(address _prof) public view returns (meeting [] memory) {\\r\\n        return Meeting[_prof];\\r\\n    }\\r\\n    \\r\\n    function getCampaign(address _prof) public view returns (campaign [] memory) {\\r\\n        return Campaign[_prof];\\r\\n    }\\r\\n    \\r\\n\\r\\n    function getProfile(address userAdd) public view returns (profile memory) {\\r\\n        return UserProfile[userAdd];\\r\\n    }\\r\\n\\r\\n    function getAllHost() public view returns (address [] memory) {\\r\\n        return AllHost;\\r\\n    }\\r\\n    \\r\\n    function getAllUser() public view returns (address [] memory) {\\r\\n        return AllUser;\\r\\n    }\\r\\n    \\r\\n    function getAllVolun() public view returns (address [] memory) {\\r\\n        return AllVolun;\\r\\n    }\\r\\n\\r\\n   \\r\\n}\",\"keccak256\":\"0x0d870916eefd20344bcc95f597c49f0fdc55c1696dfd9d126d52a9bff636b97c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c8063680908c911610104578063841a8a7e116100a2578063cb40bf6011610071578063cb40bf6014610579578063d7358c5e14610595578063f40c48c0146105cc578063fc16198d146105d6576101da565b8063841a8a7e146104dd57806396777e8d1461050d578063b16cfdd41461052b578063c5e0cfd01461055b576101da565b8063766c21a2116100de578063766c21a2146104575780637d74311c14610475578063812f2f3314610491578063834e6e89146104ad576101da565b8063680908c9146103d85780636e04ff0d146103f6578063731301cf14610427576101da565b80634585e33b1161017c57806356361f0d1161014b57806356361f0d1461037657806361bc221a146103945780636201fe69146103b25780636377e020146103bc576101da565b80634585e33b1461030257806345f36eb81461031e578063462d71ff1461034e57806347531df814610358576101da565b80632615749c116101b85780632615749c1461025d57806327a980a81461027b5780632dd47fc9146102b057806334854043146102e4576101da565b80630f53a470146101df5780631007e8c71461020f57806324b9ed2d1461022d575b600080fd5b6101f960048036038101906101f4919061304b565b6105f2565b6040516102069190613a53565b60405180910390f35b61021761092a565b6040516102249190613a75565b60405180910390f35b6102476004803603810190610242919061304b565b610930565b60405161025491906139a1565b60405180910390f35b610265610aa9565b604051610272919061395d565b60405180910390f35b61029560048036038101906102909190613078565b610b37565b6040516102a796959493929190613862565b60405180910390f35b6102ca60048036038101906102c59190613078565b610bdd565b6040516102db95949392919061380f565b60405180910390f35b6102ec610c7d565b6040516102f99190613a75565b60405180910390f35b61031c600480360381019061031791906130b8565b610c83565b005b6103386004803603810190610333919061314e565b610f07565b60405161034591906137f4565b60405180910390f35b610356610f46565b005b6103606110cb565b60405161036d919061395d565b60405180910390f35b61037e611159565b60405161038b9190613a75565b60405180910390f35b61039c61115f565b6040516103a99190613a75565b60405180910390f35b6103ba611165565b005b6103d660048036038101906103d19190613078565b61161a565b005b6103e06117cd565b6040516103ed9190613a75565b60405180910390f35b610410600480360381019061040b9190613105565b6117d7565b60405161041e9291906139c3565b60405180910390f35b610441600480360381019061043c919061304b565b611b44565b60405161044e919061397f565b60405180910390f35b61045f611cc7565b60405161046c9190613a75565b60405180910390f35b61048f600480360381019061048a919061317b565b611ccd565b005b6104ab60048036038101906104a69190613236565b611f5f565b005b6104c760048036038101906104c2919061314e565b612250565b6040516104d491906137f4565b60405180910390f35b6104f760048036038101906104f2919061314e565b61228f565b60405161050491906137f4565b60405180910390f35b6105156122ce565b604051610522919061395d565b60405180910390f35b6105456004803603810190610540919061314e565b61235c565b60405161055291906137f4565b60405180910390f35b61056361239b565b6040516105709190613a75565b60405180910390f35b610593600480360381019061058e9190613078565b6123a5565b005b6105af60048036038101906105aa919061304b565b612517565b6040516105c39897969594939291906138c3565b60405180910390f35b6105d46127b9565b005b6105f060048036038101906105eb919061317b565b6129a1565b005b6105fa612c9b565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546106ab90613d99565b80601f01602080910402602001604051908101604052809291908181526020018280546106d790613d99565b80156107245780601f106106f957610100808354040283529160200191610724565b820191906000526020600020905b81548152906001019060200180831161070757829003601f168201915b5050505050815260200160028201805461073d90613d99565b80601f016020809104026020016040519081016040528092919081815260200182805461076990613d99565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b50505050508152602001600382015481526020016004820180546107d990613d99565b80601f016020809104026020016040519081016040528092919081815260200182805461080590613d99565b80156108525780601f1061082757610100808354040283529160200191610852565b820191906000526020600020905b81548152906001019060200180831161083557829003601f168201915b5050505050815260200160058201805461086b90613d99565b80601f016020809104026020016040519081016040528092919081815260200182805461089790613d99565b80156108e45780601f106108b9576101008083540402835291602001916108e4565b820191906000526020600020905b8154815290600101906020018083116108c757829003601f168201915b505050505081526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050919050565b60035481565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a9e57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505081526020019060010190610991565b505050509050919050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610b2d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ae3575b5050505050905090565b60076020528160005260406000208181548110610b5357600080fd5b9060005260206000209060060201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b60086020528160005260406000208181548110610bf957600080fd5b9060005260206000209060050201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16905085565b60025481565b60005b600e80549050811015610f025760005b60086000600e8481548110610cae57610cad613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610eee576000610d38604051806020016040528060008152506117d7565b50905080610d7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7290613a13565b60405180910390fd5b600160086000600e8681548110610d9557610d94613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610e0c57610e0b613ed2565b5b906000526020600020906005020160040160006101000a81548160ff0219169083151502179055506001600c6000600e8681548110610e4e57610e4d613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836001811115610ed557610ed4613e74565b5b0217905550508080610ee690613dfc565b915050610c96565b508080610efa90613dfc565b915050610c86565b505050565b600e8181548110610f1757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051602001610f55906137df565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051602001610fbd91906137b3565b6040516020818303038152906040528051906020012014611013576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100a90613a33565b60405180910390fd5b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160016101000a81548160ff0219169083151502179055506000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550565b6060601080548060200260200160405190810160405280929190818152602001828054801561114f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611105575b5050505050905090565b60095481565b60005481565b604051602001611174906137ca565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016111dc91906137b3565b6040516020818303038152906040528051906020012014611232576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611229906139f3565b60405180910390fd5b6009600081548092919061124590613dfc565b9190505550611252612cfa565b33816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160400181815250506000816080018181525050600180819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600181111561130957611308613e74565b5b021790555060005b600f805490508110156114df5760011515600b6000600f848154811061133a57611339613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff16151514156114cc57600f81815481106113cc576113cb613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600b6000600f848154811061144857611447613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff0219169083151502179055506114df565b80806114d790613dfc565b915050611311565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505050565b604051602001611629906137ca565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160405160200161169191906137b3565b60405160208183030381529060405280519060200120146116e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116de906139f3565b60405180910390fd5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061173a57611739613ed2565b5b906000526020600020906006020160050160006101000a81548160ff02191690831515021790555042600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106117b4576117b3613ed2565b5b9060005260206000209060060201600301819055505050565b6000600a54905090565b6000606060005b600e80549050811015611b3e5760005b60086000600e848154811061180657611805613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611b2a5760086000600e848154811061188e5761188d613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061190557611904613ed2565b5b90600052602060002090600502016002015442101580156119d757506000151560086000600e858154811061193d5761193c613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106119b4576119b3613ed2565b5b906000526020600020906005020160040160009054906101000a900460ff161515145b15611b17576000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166001811115611a3d57611a3c613e74565b5b60006001811115611a5157611a50613e74565b5b149050600060086000600e8681548110611a6e57611a6d613ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611ae557611ae4613ed2565b5b90600052602060002090600502016002015460025442611b059190613cdb565b119050818015611b125750805b955050505b8080611b2290613dfc565b9150506117ee565b508080611b3690613dfc565b9150506117de565b50915091565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611cbc57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190611ba5565b505050509050919050565b600a5481565b6010339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190611e07929190612d5e565b5083600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506004600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908054611e9f90613d99565b611eaa929190612de4565b5081600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005019080519060200190611f01929190612d5e565b5080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019080519060200190611f58929190612d5e565b5050505050565b604051602001611f6e906137df565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051602001611fd691906137b3565b604051602081830303815290604052805190602001201461202c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202390613a33565b60405180910390fd5b600a600081548092919061203f90613dfc565b919050555061204c612e71565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050603c836120919190613c81565b4261209c9190613c2b565b81604001818152505081816060018181525050826001819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600181111561211957612118613e74565b5b0217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055505050505050565b6010818154811061226057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f818154811061229f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600e80548060200260200160405190810160405280929190818152602001828054801561235257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612308575b5050505050905090565b6011818154811061236c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600954905090565b6040516020016123b4906137ca565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160405160200161241c91906137b3565b6040516020818303038152906040528051906020012014612472576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612469906139f3565b60405180910390fd5b33600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106124c4576124c3613ed2565b5b906000526020600020906005020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600b6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461256090613d99565b80601f016020809104026020016040519081016040528092919081815260200182805461258c90613d99565b80156125d95780601f106125ae576101008083540402835291602001916125d9565b820191906000526020600020905b8154815290600101906020018083116125bc57829003601f168201915b5050505050908060020180546125ee90613d99565b80601f016020809104026020016040519081016040528092919081815260200182805461261a90613d99565b80156126675780601f1061263c57610100808354040283529160200191612667565b820191906000526020600020905b81548152906001019060200180831161264a57829003601f168201915b50505050509080600301549080600401805461268290613d99565b80601f01602080910402602001604051908101604052809291908181526020018280546126ae90613d99565b80156126fb5780601f106126d0576101008083540402835291602001916126fb565b820191906000526020600020905b8154815290600101906020018083116126de57829003601f168201915b50505050509080600501805461271090613d99565b80601f016020809104026020016040519081016040528092919081815260200182805461273c90613d99565b80156127895780601f1061275e57610100808354040283529160200191612789565b820191906000526020600020905b81548152906001019060200180831161276c57829003601f168201915b5050505050908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b6040516020016127c8906137df565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160405160200161283091906137b3565b6040516020818303038152906040528051906020012014612886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161287d90613a33565b60405180910390fd5b600f339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160016101000a81548160ff0219169083151502179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550565b600e339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836001811115612a6757612a66613e74565b5b021790555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190612b43929190612d5e565b5083600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506005600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908054612bdb90613d99565b612be6929190612de4565b5081600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005019080519060200190612c3d929190612d5e565b5080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019080519060200190612c94929190612d5e565b5050505050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160608152602001606081526020016000151581526020016000151581525090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000151581525090565b828054612d6a90613d99565b90600052602060002090601f016020900481019282612d8c5760008555612dd3565b82601f10612da557805160ff1916838001178555612dd3565b82800160010185558215612dd3579182015b82811115612dd2578251825591602001919060010190612db7565b5b509050612de09190612ece565b5090565b828054612df090613d99565b90600052602060002090601f016020900481019282612e125760008555612e60565b82601f10612e235780548555612e60565b82800160010185558215612e6057600052602060002091601f016020900482015b82811115612e5f578254825591600101919060010190612e44565b5b509050612e6d9190612ece565b5090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b5b80821115612ee7576000816000905550600101612ecf565b5090565b6000612efe612ef984613ab5565b613a90565b905082815260208101848484011115612f1a57612f19613f3f565b5b612f25848285613d57565b509392505050565b6000612f40612f3b84613ae6565b613a90565b905082815260208101848484011115612f5c57612f5b613f3f565b5b612f67848285613d57565b509392505050565b600081359050612f7e81614052565b92915050565b60008083601f840112612f9a57612f99613f35565b5b8235905067ffffffffffffffff811115612fb757612fb6613f30565b5b602083019150836001820283011115612fd357612fd2613f3a565b5b9250929050565b600082601f830112612fef57612fee613f35565b5b8135612fff848260208601612eeb565b91505092915050565b600082601f83011261301d5761301c613f35565b5b813561302d848260208601612f2d565b91505092915050565b60008135905061304581614069565b92915050565b60006020828403121561306157613060613f49565b5b600061306f84828501612f6f565b91505092915050565b6000806040838503121561308f5761308e613f49565b5b600061309d85828601612f6f565b92505060206130ae85828601613036565b9150509250929050565b600080602083850312156130cf576130ce613f49565b5b600083013567ffffffffffffffff8111156130ed576130ec613f44565b5b6130f985828601612f84565b92509250509250929050565b60006020828403121561311b5761311a613f49565b5b600082013567ffffffffffffffff81111561313957613138613f44565b5b61314584828501612fda565b91505092915050565b60006020828403121561316457613163613f49565b5b600061317284828501613036565b91505092915050565b6000806000806080858703121561319557613194613f49565b5b60006131a387828801613036565b945050602085013567ffffffffffffffff8111156131c4576131c3613f44565b5b6131d087828801613008565b935050604085013567ffffffffffffffff8111156131f1576131f0613f44565b5b6131fd87828801613008565b925050606085013567ffffffffffffffff81111561321e5761321d613f44565b5b61322a87828801613008565b91505092959194509250565b6000806040838503121561324d5761324c613f49565b5b600061325b85828601613036565b925050602061326c85828601613036565b9150509250929050565b600061328283836132be565b60208301905092915050565b600061329a83836135ed565b60c08301905092915050565b60006132b28383613668565b60a08301905092915050565b6132c781613d0f565b82525050565b6132d681613d0f565b82525050565b60006132e782613b5c565b6132f18185613bba565b93506132fc83613b17565b8060005b8381101561332d5781516133148882613276565b975061331f83613b93565b925050600181019050613300565b5085935050505092915050565b600061334582613b67565b61334f8185613bcb565b935061335a83613b27565b8060005b8381101561338b578151613372888261328e565b975061337d83613ba0565b92505060018101905061335e565b5085935050505092915050565b60006133a382613b72565b6133ad8185613bdc565b93506133b883613b37565b8060005b838110156133e95781516133d088826132a6565b97506133db83613bad565b9250506001810190506133bc565b5085935050505092915050565b6133ff81613d21565b82525050565b61340e81613d21565b82525050565b600061341f82613b7d565b6134298185613bed565b9350613439818560208601613d66565b61344281613f4e565b840191505092915050565b600061345882613b88565b6134628185613bfe565b9350613472818560208601613d66565b61347b81613f4e565b840191505092915050565b600061349182613b88565b61349b8185613c0f565b93506134ab818560208601613d66565b6134b481613f4e565b840191505092915050565b600081546134cc81613d99565b6134d68186613c20565b945060018216600081146134f1576001811461350257613535565b60ff19831686528186019350613535565b61350b85613b47565b60005b8381101561352d5781548189015260018201915060208101905061350e565b838801955050505b50505092915050565b600061354b600a83613c0f565b915061355682613f5f565b602082019050919050565b600061356e600483613c20565b915061357982613f88565b600482019050919050565b6000613591602383613c0f565b915061359c82613fb1565b604082019050919050565b60006135b4600483613c20565b91506135bf82614000565b600482019050919050565b60006135d7600a83613c0f565b91506135e282614029565b602082019050919050565b60c08201600082015161360360008501826132be565b50602082015161361660208501826132be565b5060408201516136296040850182613795565b50606082015161363c6060850182613795565b50608082015161364f6080850182613795565b5060a082015161366260a08501826133f6565b50505050565b60a08201600082015161367e60008501826132be565b50602082015161369160208501826132be565b5060408201516136a46040850182613795565b5060608201516136b76060850182613795565b5060808201516136ca60808501826133f6565b50505050565b6000610100830160008301516136e960008601826132be565b5060208301518482036020860152613701828261344d565b9150506040830151848203604086015261371b828261344d565b91505060608301516137306060860182613795565b5060808301518482036080860152613748828261344d565b91505060a083015184820360a0860152613762828261344d565b91505060c083015161377760c08601826133f6565b5060e083015161378a60e08601826133f6565b508091505092915050565b61379e81613d4d565b82525050565b6137ad81613d4d565b82525050565b60006137bf82846134bf565b915081905092915050565b60006137d582613561565b9150819050919050565b60006137ea826135a7565b9150819050919050565b600060208201905061380960008301846132cd565b92915050565b600060a08201905061382460008301886132cd565b61383160208301876132cd565b61383e60408301866137a4565b61384b60608301856137a4565b6138586080830184613405565b9695505050505050565b600060c08201905061387760008301896132cd565b61388460208301886132cd565b61389160408301876137a4565b61389e60608301866137a4565b6138ab60808301856137a4565b6138b860a0830184613405565b979650505050505050565b6000610100820190506138d9600083018b6132cd565b81810360208301526138eb818a613486565b905081810360408301526138ff8189613486565b905061390e60608301886137a4565b81810360808301526139208187613486565b905081810360a08301526139348186613486565b905061394360c0830185613405565b61395060e0830184613405565b9998505050505050505050565b6000602082019050818103600083015261397781846132dc565b905092915050565b60006020820190508181036000830152613999818461333a565b905092915050565b600060208201905081810360008301526139bb8184613398565b905092915050565b60006040820190506139d86000830185613405565b81810360208301526139ea8184613414565b90509392505050565b60006020820190508181036000830152613a0c8161353e565b9050919050565b60006020820190508181036000830152613a2c81613584565b9050919050565b60006020820190508181036000830152613a4c816135ca565b9050919050565b60006020820190508181036000830152613a6d81846136d0565b905092915050565b6000602082019050613a8a60008301846137a4565b92915050565b6000613a9a613aab565b9050613aa68282613dcb565b919050565b6000604051905090565b600067ffffffffffffffff821115613ad057613acf613f01565b5b613ad982613f4e565b9050602081019050919050565b600067ffffffffffffffff821115613b0157613b00613f01565b5b613b0a82613f4e565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613c3682613d4d565b9150613c4183613d4d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c7657613c75613e45565b5b828201905092915050565b6000613c8c82613d4d565b9150613c9783613d4d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613cd057613ccf613e45565b5b828202905092915050565b6000613ce682613d4d565b9150613cf183613d4d565b925082821015613d0457613d03613e45565b5b828203905092915050565b6000613d1a82613d2d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015613d84578082015181840152602081019050613d69565b83811115613d93576000848401525b50505050565b60006002820490506001821680613db157607f821691505b60208210811415613dc557613dc4613ea3565b5b50919050565b613dd482613f4e565b810181811067ffffffffffffffff82111715613df357613df2613f01565b5b80604052505050565b6000613e0782613d4d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613e3a57613e39613e45565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e4f542041205553455200000000000000000000000000000000000000000000600082015250565b7f5573657200000000000000000000000000000000000000000000000000000000600082015250565b7f446f65736e2774206d65657420726571756972656d656e7420666f722055704b60008201527f6565700000000000000000000000000000000000000000000000000000000000602082015250565b7f486f737400000000000000000000000000000000000000000000000000000000600082015250565b7f4e4f54204120484f535400000000000000000000000000000000000000000000600082015250565b61405b81613d0f565b811461406657600080fd5b50565b61407281613d4d565b811461407d57600080fd5b5056fea264697066735822122090f01c1c5571d30294a458ef56543fda2c4dcc3c969a9314a8c6d4964d71221464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "becomeVolun()": {
        "details": "This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign "
      },
      "checkUpkeep(bytes)": {
        "details": "This is the function that the Chainlink Keeper nodes call they look for `upkeepNeeded` to return True. the following should be true for this to return true: 1. It makes sure that the campaign or meeting is not yet completed 2. The time interval has passed for either meeting or campaign."
      },
      "constructor": {
        "details": "constructor used to assign values that will not change"
      },
      "createCampaign()": {
        "details": "This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign"
      },
      "createHost(uint256,string,string,string)": {
        "details": "This function `createHost` any body can call this functions and the senders profile would be set to that of a `Host`"
      },
      "createSchedule(uint256,uint256)": {
        "details": "This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier after which a Host can create a meeting with some parameters like time and fee needed"
      },
      "createUser(uint256,string,string,string)": {
        "details": "This function `createUser` any body can call this functions and the senders profile would be set to that of a `User`"
      },
      "endCampaign(address,uint256)": {
        "details": "This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign"
      },
      "joinMeeting(address,uint256)": {
        "details": "This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier after which the meeting ID is specified and the user would be assigned to the meeting"
      },
      "performUpkeep(bytes)": {
        "details": "Once `checkUpkeep` is returning `true`, this function is called"
      },
      "unVolun()": {
        "details": "This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign "
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "meetingNum()": {
        "notice": "Getter Functions "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "counter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "i_interval",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 27,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "v_lastTimeStamp",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 32,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "userType",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 35,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "hostType",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 38,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "volunType",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 44,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "Campaign",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_struct(campaign)122_storage)dyn_storage)"
      },
      {
        "astId": 50,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "Meeting",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(meeting)109_storage)dyn_storage)"
      },
      {
        "astId": 52,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "campaignIndex",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 54,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "meetingIndex",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "UserProfile",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_struct(profile)98_storage)"
      },
      {
        "astId": 64,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "s_xtelpState",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_enum(XTELPState)21)"
      },
      {
        "astId": 69,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "volunState",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_enum(XTELPState)21)"
      },
      {
        "astId": 72,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllHost",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 75,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllVolun",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 78,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllUser",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 81,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "recentCampaignCreator",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(campaign)122_storage)dyn_storage": {
        "base": "t_struct(campaign)122_storage",
        "encoding": "dynamic_array",
        "label": "struct XTELPT.campaign[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(meeting)109_storage)dyn_storage": {
        "base": "t_struct(meeting)109_storage",
        "encoding": "dynamic_array",
        "label": "struct XTELPT.meeting[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(XTELPState)21": {
        "encoding": "inplace",
        "label": "enum XTELPT.XTELPState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(campaign)122_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.campaign[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(campaign)122_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(meeting)109_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.meeting[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(meeting)109_storage)dyn_storage"
      },
      "t_mapping(t_address,t_enum(XTELPState)21)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum XTELPT.XTELPState)",
        "numberOfBytes": "32",
        "value": "t_enum(XTELPState)21"
      },
      "t_mapping(t_address,t_struct(profile)98_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.profile)",
        "numberOfBytes": "32",
        "value": "t_struct(profile)98_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(campaign)122_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.campaign",
        "members": [
          {
            "astId": 111,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "volunteer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 113,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 115,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "start_time",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 117,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "end_time",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 119,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "fee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 121,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "completed",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(meeting)109_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.meeting",
        "members": [
          {
            "astId": 100,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "host",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 102,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 104,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "time",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 106,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "fee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 108,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "completed",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(profile)98_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.profile",
        "members": [
          {
            "astId": 83,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 85,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 87,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "role",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 89,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "rating",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 91,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "bio",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 93,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "profilePic",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 95,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "avaliable",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 97,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "volun",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}