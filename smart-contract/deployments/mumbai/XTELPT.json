{
  "address": "0xBE7132544bbCDda48C412a5d56472409F3c944b8",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "RequestedID",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AllVolun",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Campaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "volunteer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Meeting",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "UserProfile",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "profilePic",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "avaliable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "volun",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "becomeVolun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pic",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "createHost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "createSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rating",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pic",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllHost",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUser",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllVolun",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prof",
          "type": "address"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "volunteer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.campaign[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prof",
          "type": "address"
        }
      ],
      "name": "getMeeting",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.meeting[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAdd",
          "type": "address"
        }
      ],
      "name": "getProfile",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rating",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "profilePic",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "avaliable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "volun",
              "type": "bool"
            }
          ],
          "internalType": "struct XTELPT.profile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_host",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "joinMeeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meetingIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "meetingNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "recentCampaignCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unVolun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "v_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8925ec3cbfba0b6b1a9d7c1a0094b15dc90b6cdc484bfce38cb22fda91fdeb84",
  "receipt": {
    "to": null,
    "from": "0xe431d300d25eDB84d32f67b7bdaeC56F03af4d03",
    "contractAddress": "0xBE7132544bbCDda48C412a5d56472409F3c944b8",
    "transactionIndex": 11,
    "gasUsed": "3832811",
    "logsBloom": "0x
    "blockHash": "0x22278b79ee65affd38c2ca11571d198eae9f79767adecd666fce6e68c8ea723b",
    "transactionHash": "0x8925ec3cbfba0b6b1a9d7c1a0094b15dc90b6cdc484bfce38cb22fda91fdeb84",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 28889607,
        "transactionHash": "0x8925ec3cbfba0b6b1a9d7c1a0094b15dc90b6cdc484bfce38cb22fda91fdeb84",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e431d300d25edb84d32f67b7bdaec56f03af4d03",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000003b700be50219c00000000000000000000000000000000000000000000000000926223f275e37c2000000000000000000000000000000000000000000001733f71232a54e6f586f00000000000000000000000000000000000000000000000008eab233425c1e02000000000000000000000000000000000000000000001733f74da2b13371722f",
        "logIndex": 56,
        "blockHash": "0x22278b79ee65affd38c2ca11571d198eae9f79767adecd666fce6e68c8ea723b"
      }
    ],
    "blockNumber": 28889607,
    "cumulativeGasUsed": "6090591",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 9,
  "solcInputHash": "1182b3df2991d1f08f7c76ba055dcc79",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedID\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AllVolun\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Campaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"volunteer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Meeting\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserProfile\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profilePic\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"avaliable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"volun\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeVolun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"createHost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"createSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllHost\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUser\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVolun\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prof\",\"type\":\"address\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"volunteer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prof\",\"type\":\"address\"}],\"name\":\"getMeeting\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.meeting[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAdd\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profilePic\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"avaliable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"volun\",\"type\":\"bool\"}],\"internalType\":\"struct XTELPT.profile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_host\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"joinMeeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meetingIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"meetingNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recentCampaignCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unVolun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"v_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"becomeVolun()\":{\"details\":\"This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign \"},\"checkUpkeep(bytes)\":{\"details\":\"This is the function that the Chainlink Keeper nodes call they look for `upkeepNeeded` to return True. the following should be true for this to return true: 1. It makes sure that the campaign or meeting is not yet completed 2. The time interval has passed for either meeting or campaign.\"},\"constructor\":{\"details\":\"constructor used to assign values that will not change\"},\"createCampaign()\":{\"details\":\"This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign\"},\"createHost(uint256,string,string,string)\":{\"details\":\"This function `createHost` any body can call this functions and the senders profile would be set to that of a `Host`\"},\"createSchedule(uint256,uint256)\":{\"details\":\"This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier after which a Host can create a meeting with some parameters like time and fee needed\"},\"createUser(uint256,string,string,string)\":{\"details\":\"This function `createUser` any body can call this functions and the senders profile would be set to that of a `User`\"},\"endCampaign(address,uint256)\":{\"details\":\"This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign\"},\"joinMeeting(address,uint256)\":{\"details\":\"This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier after which the meeting ID is specified and the user would be assigned to the meeting\"},\"performUpkeep(bytes)\":{\"details\":\"Once `checkUpkeep` is returning `true`, this function is called\"},\"unVolun()\":{\"details\":\"This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"meetingNum()\":{\"notice\":\"Getter Functions \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/XTELPT.sol\":\"XTELPT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/XTELPT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\ninterface KeeperCompatibleInterface {\\r\\n    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\r\\n    function performUpkeep(bytes calldata performData) external;\\r\\n}\\r\\n\\r\\ncontract XTELPT is  KeeperCompatibleInterface {\\r\\n\\r\\n    enum XTELPState {\\r\\n        OPEN,\\r\\n        CLOSED\\r\\n    }\\r\\n\\r\\n    uint public counter;    \\r\\n    // Use an i_interval in seconds and a timestamp to slow execution of Upkeep\\r\\n    uint private i_interval;\\r\\n    uint public s_lastTimeStamp;\\r\\n    uint public v_lastTimeStamp;\\r\\n\\r\\n\\r\\n    /* string User Types */\\r\\n    string userType = \\\"User\\\";\\r\\n    string hostType = \\\"Host\\\";\\r\\n    string volunType = \\\"Volun\\\";\\r\\n\\r\\n\\r\\n    /* Campaign and Meeting variables */\\r\\n\\r\\n    mapping(address => campaign[]) public Campaign;\\r\\n\\r\\n    mapping(address => meeting[]) public Meeting;\\r\\n\\r\\n    uint256 public campaignIndex;\\r\\n    \\r\\n    uint256 public meetingIndex;    \\r\\n    \\r\\n    /* User profile mapping */\\r\\n    mapping(address => profile) public UserProfile;\\r\\n\\r\\n    /* State mapping */\\r\\n    mapping(address => XTELPState) private s_xtelpState;\\r\\n    mapping(address => XTELPState) private volunState;\\r\\n\\r\\n    /* User Types Arrays */\\r\\n    address [] public AllHost;\\r\\n\\r\\n    address [] public AllVolun;\\r\\n    \\r\\n    address [] public AllUser;\\r\\n\\r\\n    address [] public recentCampaignCreator;\\r\\n\\r\\n\\r\\n    /* Struct */\\r\\n    struct profile {\\r\\n        address addr;\\r\\n        string name;\\r\\n        string role;\\r\\n        uint256 rating;\\r\\n        string bio;\\r\\n        string profilePic;\\r\\n        bool avaliable;\\r\\n        bool volun;\\r\\n    }\\r\\n\\r\\n    struct meeting {\\r\\n        address host;\\r\\n        address user;\\r\\n        uint256 start;\\r\\n        uint256 end;\\r\\n        uint256 time;\\r\\n        uint256 fee;\\r\\n        bool completed;\\r\\n    }\\r\\n    \\r\\n    struct campaign {\\r\\n        address volunteer;\\r\\n        address user;\\r\\n        uint256 start_time;\\r\\n        uint256 end_time;\\r\\n        uint256 fee;\\r\\n        bool completed;\\r\\n    }\\r\\n\\r\\n    /* Modifiers */\\r\\n    modifier onlyHost  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"Host\\\")), \\\"NOT A HOST\\\");\\r\\n        _;\\r\\n    }\\r\\n   \\r\\n    modifier onlyVolun  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"Host\\\")) && UserProfile[msg.sender].avaliable == true , \\\"NOT A VOLUNTEER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyUser  {\\r\\n        require(keccak256(abi.encodePacked(UserProfile[msg.sender].role)) == keccak256(abi.encodePacked(\\\"User\\\")), \\\"NOT A USER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    event RequestedID(uint256 indexed requestId);\\r\\n\\r\\n    /**\\r\\n     * @dev constructor used to assign values that will not change\\r\\n     */\\r\\n    constructor() {\\r\\n      \\r\\n        s_lastTimeStamp = block.timestamp;\\r\\n        v_lastTimeStamp = block.timestamp;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n        volunState[msg.sender] = XTELPState.OPEN;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createUser` any body can call this functions and the senders profile\\r\\n     * would be set to that of a `User`\\r\\n     */\\r\\n    function createUser(uint256 _rating, string memory _name, string memory _pic, string memory _bio) public {\\r\\n        AllUser.push(msg.sender);\\r\\n        UserProfile[msg.sender].addr = msg.sender;\\r\\n        UserProfile[msg.sender].name = _name;\\r\\n        UserProfile[msg.sender].rating = _rating;\\r\\n        UserProfile[msg.sender].role = userType;\\r\\n        UserProfile[msg.sender].profilePic = _pic;\\r\\n        UserProfile[msg.sender].bio = _bio;\\r\\n    }\\r\\n\\r\\n    \\r\\n    /**\\r\\n     * @dev This function `createHost` any body can call this functions and the senders profile\\r\\n     * would be set to that of a `Host`\\r\\n     */\\r\\n    function createHost(uint256 _rating, string memory _name, string memory _pic, string memory _bio) public {  \\r\\n        AllHost.push(msg.sender);\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        UserProfile[msg.sender].addr = msg.sender;\\r\\n        UserProfile[msg.sender].name = _name;\\r\\n        UserProfile[msg.sender].rating = _rating;\\r\\n        UserProfile[msg.sender].role = hostType;\\r\\n        UserProfile[msg.sender].profilePic = _pic;\\r\\n        UserProfile[msg.sender].bio = _bio;\\r\\n    }\\r\\n\\r\\n     /**\\r\\n     * @dev This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign \\r\\n     */\\r\\n    function becomeVolun() public onlyHost {\\r\\n        AllVolun.push(msg.sender);\\r\\n       \\r\\n        UserProfile[msg.sender].volun = true;\\r\\n        UserProfile[msg.sender].avaliable = true;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign \\r\\n     */\\r\\n    function unVolun() public onlyHost {       \\r\\n        UserProfile[msg.sender].volun = false;\\r\\n        UserProfile[msg.sender].avaliable = false;\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier\\r\\n     * after which a Host can create a meeting with some parameters like time and fee needed\\r\\n     */\\r\\n    function createSchedule(uint256 _time, uint256 _fee) public onlyHost {\\r\\n        meetingIndex ++;\\r\\n        \\r\\n        meeting memory NewMeeting;\\r\\n        NewMeeting.host = msg.sender;\\r\\n        NewMeeting.time = _time * 60;\\r\\n        NewMeeting.start = block.timestamp;\\r\\n        NewMeeting.fee = _fee;\\r\\n\\r\\n        i_interval = _time * 60;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        Meeting[msg.sender].push(NewMeeting);\\r\\n      \\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which the meeting ID is specified and the user would be assigned to the meeting\\r\\n     */\\r\\n    function joinMeeting(address _host, uint256 _id) public onlyUser {\\r\\n        Meeting[_host][_id].user = msg.sender;\\r\\n    } \\r\\n\\r\\n    /**\\r\\n     * @dev This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which any avaliable volunteer would be assigned to the campaign\\r\\n     */\\r\\n    function createCampaign() public onlyUser {\\r\\n        campaignIndex ++;\\r\\n\\r\\n        campaign memory NewCampaign;\\r\\n        NewCampaign.user = msg.sender;\\r\\n        NewCampaign.start_time = block.timestamp;\\r\\n        NewCampaign.fee = 0;\\r\\n\\r\\n        i_interval = 1;\\r\\n        s_xtelpState[msg.sender] = XTELPState.OPEN;\\r\\n\\r\\n        for(uint i = 0; i < AllVolun.length; i++){\\r\\n            if(UserProfile[AllVolun[i]].avaliable == true){\\r\\n                NewCampaign.volunteer = AllVolun[i];\\r\\n                UserProfile[AllVolun[i]].avaliable = false;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        Campaign[msg.sender].push(NewCampaign);\\r\\n      \\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier\\r\\n     * after which any avaliable volunteer would be assigned to the campaign\\r\\n     */\\r\\n    function endCampaign(address _user, uint256 _id) public onlyUser {\\r\\n       Campaign[_user][_id].completed = true;\\r\\n       Campaign[_user][_id].end_time = block.timestamp;\\r\\n    }\\r\\n\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n    /**\\r\\n     * @dev This is the function that the Chainlink Keeper nodes call\\r\\n     * they look for `upkeepNeeded` to return True.\\r\\n     * the following should be true for this to return true:\\r\\n     * 1. It makes sure that the campaign or meeting is not yet completed\\r\\n     * 2. The time interval has passed for either meeting or campaign.\\r\\n     */\\r\\n   \\r\\n   function checkUpkeep(bytes memory /* checkData */) public view override returns ( bool upkeepNeeded,\\r\\n    bytes memory /* performData */  ) {\\r\\n        \\r\\n        for (uint i = 0; i < AllHost.length; i++) {\\r\\n            for (uint j = 0; j < Meeting[AllHost[i]].length; j++) {\\r\\n                if(Meeting[AllHost[i]][j].time > 0 && Meeting[AllHost[i]][j].completed == false){\\r\\n                    bool isOpen = XTELPState.OPEN == s_xtelpState[msg.sender];\\r\\n                    bool timePassed = ((block.timestamp - Meeting[AllHost[i]][j].start) >  Meeting[AllHost[i]][j].time);\\r\\n                    upkeepNeeded = (isOpen && timePassed);\\r\\n                }\\r\\n                \\r\\n            }\\r\\n        }\\r\\n       \\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Once `checkUpkeep` is returning `true`, this function is called\\r\\n     */\\r\\n    function performUpkeep(bytes calldata /*performData*/) external override {\\r\\n\\r\\n        for (uint i = 0; i < AllHost.length; i++) {\\r\\n            for (uint j = 0; j < Meeting[AllHost[i]].length; j++) {\\r\\n               (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n                require(upkeepNeeded, \\\"Doesn't meet requirement for UpKeep\\\");\\r\\n                Meeting[AllHost[i]][j].completed = true;\\r\\n                Meeting[AllHost[i]][j].end = block.timestamp;\\r\\n                s_xtelpState[AllHost[i]] = XTELPState.CLOSED;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        \\r\\n        \\r\\n    }\\r\\n   \\r\\n   \\r\\n    /** Getter Functions */\\r\\n\\r\\n    function meetingNum() public view returns (uint256) {\\r\\n        return meetingIndex;\\r\\n    }\\r\\n    \\r\\n    function campaignNum() public view returns (uint256) {\\r\\n        return campaignIndex;\\r\\n    }\\r\\n\\r\\n    function getMeeting(address _prof) public view returns (meeting [] memory) {\\r\\n        return Meeting[_prof];\\r\\n    }\\r\\n    \\r\\n    function getCampaign(address _prof) public view returns (campaign [] memory) {\\r\\n        return Campaign[_prof];\\r\\n    }\\r\\n    \\r\\n\\r\\n    function getProfile(address userAdd) public view returns (profile memory) {\\r\\n        return UserProfile[userAdd];\\r\\n    }\\r\\n\\r\\n    function getAllHost() public view returns (address [] memory) {\\r\\n        return AllHost;\\r\\n    }\\r\\n    \\r\\n    function getAllUser() public view returns (address [] memory) {\\r\\n        return AllUser;\\r\\n    }\\r\\n    \\r\\n    function getAllVolun() public view returns (address [] memory) {\\r\\n        return AllVolun;\\r\\n    }\\r\\n\\r\\n   \\r\\n}\",\"keccak256\":\"0xdfc5bc857e8484fedbfb7d8c37561281e597a7be7c0def435fa227b19c53d570\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c8063680908c911610104578063841a8a7e116100a2578063cb40bf6011610071578063cb40bf601461057b578063d7358c5e14610597578063f40c48c0146105ce578063fc16198d146105d8576101da565b8063841a8a7e146104df57806396777e8d1461050f578063b16cfdd41461052d578063c5e0cfd01461055d576101da565b8063766c21a2116100de578063766c21a2146104595780637d74311c14610477578063812f2f3314610493578063834e6e89146104af576101da565b8063680908c9146103da5780636e04ff0d146103f8578063731301cf14610429576101da565b80634585e33b1161017c57806356361f0d1161014b57806356361f0d1461037857806361bc221a146103965780636201fe69146103b45780636377e020146103be576101da565b80634585e33b1461030457806345f36eb814610320578063462d71ff1461035057806347531df81461035a576101da565b80632615749c116101b85780632615749c1461025d57806327a980a81461027b5780632dd47fc9146102b057806334854043146102e6576101da565b80630f53a470146101df5780631007e8c71461020f57806324b9ed2d1461022d575b600080fd5b6101f960048036038101906101f491906131dd565b6105f4565b6040516102069190613c27565b60405180910390f35b61021761092c565b6040516102249190613c49565b60405180910390f35b610247600480360381019061024291906131dd565b610932565b6040516102549190613b75565b60405180910390f35b610265610abf565b6040516102729190613b31565b60405180910390f35b6102956004803603810190610290919061320a565b610b4d565b6040516102a7969594939291906139c7565b60405180910390f35b6102ca60048036038101906102c5919061320a565b610bf3565b6040516102dd9796959493929190613a28565b60405180910390f35b6102ee610c9f565b6040516102fb9190613c49565b60405180910390f35b61031e6004803603810190610319919061324a565b610ca5565b005b61033a600480360381019061033591906132e0565b610fce565b60405161034791906139ac565b60405180910390f35b61035861100d565b005b610362611192565b60405161036f9190613b31565b60405180910390f35b610380611220565b60405161038d9190613c49565b60405180910390f35b61039e611226565b6040516103ab9190613c49565b60405180910390f35b6103bc61122c565b005b6103d860048036038101906103d3919061320a565b6116e1565b005b6103e2611894565b6040516103ef9190613c49565b60405180910390f35b610412600480360381019061040d9190613297565b61189e565b604051610420929190613b97565b60405180910390f35b610443600480360381019061043e91906131dd565b611ca9565b6040516104509190613b53565b60405180910390f35b610461611e2c565b60405161046e9190613c49565b60405180910390f35b610491600480360381019061048c919061330d565b611e32565b005b6104ad60048036038101906104a891906133c8565b6120c4565b005b6104c960048036038101906104c491906132e0565b6123d4565b6040516104d691906139ac565b60405180910390f35b6104f960048036038101906104f491906132e0565b612413565b60405161050691906139ac565b60405180910390f35b610517612452565b6040516105249190613b31565b60405180910390f35b610547600480360381019061054291906132e0565b6124e0565b60405161055491906139ac565b60405180910390f35b61056561251f565b6040516105729190613c49565b60405180910390f35b6105956004803603810190610590919061320a565b612529565b005b6105b160048036038101906105ac91906131dd565b61269b565b6040516105c5989796959493929190613a97565b60405180910390f35b6105d661293d565b005b6105f260048036038101906105ed919061330d565b612b25565b005b6105fc612e1f565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546106ad90613f17565b80601f01602080910402602001604051908101604052809291908181526020018280546106d990613f17565b80156107265780601f106106fb57610100808354040283529160200191610726565b820191906000526020600020905b81548152906001019060200180831161070957829003601f168201915b5050505050815260200160028201805461073f90613f17565b80601f016020809104026020016040519081016040528092919081815260200182805461076b90613f17565b80156107b85780601f1061078d576101008083540402835291602001916107b8565b820191906000526020600020905b81548152906001019060200180831161079b57829003601f168201915b50505050508152602001600382015481526020016004820180546107db90613f17565b80601f016020809104026020016040519081016040528092919081815260200182805461080790613f17565b80156108545780601f1061082957610100808354040283529160200191610854565b820191906000526020600020905b81548152906001019060200180831161083757829003601f168201915b5050505050815260200160058201805461086d90613f17565b80601f016020809104026020016040519081016040528092919081815260200182805461089990613f17565b80156108e65780601f106108bb576101008083540402835291602001916108e6565b820191906000526020600020905b8154815290600101906020018083116108c957829003601f168201915b505050505081526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050919050565b60035481565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ab457838290600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16151515158152505081526020019060010190610993565b505050509050919050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610b4357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610af9575b5050505050905090565b60076020528160005260406000208181548110610b6957600080fd5b9060005260206000209060060201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b60086020528160005260406000208181548110610c0f57600080fd5b9060005260206000209060070201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16905087565b60025481565b60005b600e80549050811015610fc95760005b60086000600e8481548110610cd057610ccf614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610fb5576000610d5a6040518060200160405280600081525061189e565b50905080610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490613be7565b60405180910390fd5b600160086000600e8681548110610db757610db6614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610e2e57610e2d614050565b5b906000526020600020906007020160060160006101000a81548160ff0219169083151502179055504260086000600e8681548110610e6f57610e6e614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610ee657610ee5614050565b5b9060005260206000209060070201600301819055506001600c6000600e8681548110610f1557610f14614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836001811115610f9c57610f9b613ff2565b5b0217905550508080610fad90613f7a565b915050610cb8565b508080610fc190613f7a565b915050610ca8565b505050565b600e8181548110610fde57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60405160200161101c90613997565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051602001611084919061396b565b60405160208183030381529060405280519060200120146110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d190613c07565b60405180910390fd5b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160016101000a81548160ff0219169083151502179055506000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550565b6060601080548060200260200160405190810160405280929190818152602001828054801561121657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111cc575b5050505050905090565b60095481565b60005481565b60405160200161123b90613982565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016112a3919061396b565b60405160208183030381529060405280519060200120146112f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f090613bc7565b60405180910390fd5b6009600081548092919061130c90613f7a565b9190505550611319612e7e565b33816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160400181815250506000816080018181525050600180819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360018111156113d0576113cf613ff2565b5b021790555060005b600f805490508110156115a65760011515600b6000600f848154811061140157611400614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff161515141561159357600f818154811061149357611492614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600b6000600f848154811061150f5761150e614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff0219169083151502179055506115a6565b808061159e90613f7a565b9150506113d8565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550505050565b6040516020016116f090613982565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051602001611758919061396b565b60405160208183030381529060405280519060200120146117ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a590613bc7565b60405180910390fd5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061180157611800614050565b5b906000526020600020906006020160050160006101000a81548160ff02191690831515021790555042600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061187b5761187a614050565b5b9060005260206000209060060201600301819055505050565b6000600a54905090565b6000606060005b600e80549050811015611ca35760005b60086000600e84815481106118cd576118cc614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611c8f57600060086000600e858154811061195757611956614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106119ce576119cd614050565b5b906000526020600020906007020160040154118015611a9e57506000151560086000600e8581548110611a0457611a03614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611a7b57611a7a614050565b5b906000526020600020906007020160060160009054906101000a900460ff161515145b15611c7c576000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166001811115611b0457611b03613ff2565b5b60006001811115611b1857611b17613ff2565b5b149050600060086000600e8681548110611b3557611b34614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611bac57611bab614050565b5b90600052602060002090600702016004015460086000600e8781548110611bd657611bd5614050565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110611c4d57611c4c614050565b5b90600052602060002090600702016002015442611c6a9190613e59565b119050818015611c775750805b955050505b8080611c8790613f7a565b9150506118b5565b508080611c9b90613f7a565b9150506118a5565b50915091565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611e2157838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190611d0a565b505050509050919050565b600a5481565b6010339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190611f6c929190612ee2565b5083600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506004600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190805461200490613f17565b61200f929190612f68565b5081600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005019080519060200190612066929190612ee2565b5080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040190805190602001906120bd929190612ee2565b5050505050565b6040516020016120d390613997565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160405160200161213b919061396b565b6040516020818303038152906040528051906020012014612191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218890613c07565b60405180910390fd5b600a60008154809291906121a490613f7a565b91905055506121b1612ff5565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050603c836121f69190613dff565b81608001818152505042816040018181525050818160a0018181525050603c836122209190613dff565b6001819055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600181111561228957612288613ff2565b5b0217905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055505050505050565b601081815481106123e457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f818154811061242357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600e8054806020026020016040519081016040528092919081815260200182805480156124d657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161248c575b5050505050905090565b601181815481106124f057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600954905090565b60405160200161253890613982565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016125a0919061396b565b60405160208183030381529060405280519060200120146125f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125ed90613bc7565b60405180910390fd5b33600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061264857612647614050565b5b906000526020600020906007020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600b6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546126e490613f17565b80601f016020809104026020016040519081016040528092919081815260200182805461271090613f17565b801561275d5780601f106127325761010080835404028352916020019161275d565b820191906000526020600020905b81548152906001019060200180831161274057829003601f168201915b50505050509080600201805461277290613f17565b80601f016020809104026020016040519081016040528092919081815260200182805461279e90613f17565b80156127eb5780601f106127c0576101008083540402835291602001916127eb565b820191906000526020600020905b8154815290600101906020018083116127ce57829003601f168201915b50505050509080600301549080600401805461280690613f17565b80601f016020809104026020016040519081016040528092919081815260200182805461283290613f17565b801561287f5780601f106128545761010080835404028352916020019161287f565b820191906000526020600020905b81548152906001019060200180831161286257829003601f168201915b50505050509080600501805461289490613f17565b80601f01602080910402602001604051908101604052809291908181526020018280546128c090613f17565b801561290d5780601f106128e25761010080835404028352916020019161290d565b820191906000526020600020905b8154815290600101906020018083116128f057829003601f168201915b5050505050908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b60405160200161294c90613997565b60405160208183030381529060405280519060200120600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040516020016129b4919061396b565b6040516020818303038152906040528051906020012014612a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0190613c07565b60405180910390fd5b600f339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160016101000a81548160ff0219169083151502179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff021916908315150217905550565b600e339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836001811115612beb57612bea613ff2565b5b021790555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190612cc7929190612ee2565b5083600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506005600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908054612d5f90613f17565b612d6a929190612f68565b5081600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005019080519060200190612dc1929190612ee2565b5080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019080519060200190612e18929190612ee2565b5050505050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160608152602001606081526020016000151581526020016000151581525090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000151581525090565b828054612eee90613f17565b90600052602060002090601f016020900481019282612f105760008555612f57565b82601f10612f2957805160ff1916838001178555612f57565b82800160010185558215612f57579182015b82811115612f56578251825591602001919060010190612f3b565b5b509050612f649190613060565b5090565b828054612f7490613f17565b90600052602060002090601f016020900481019282612f965760008555612fe4565b82601f10612fa75780548555612fe4565b82800160010185558215612fe457600052602060002091601f016020900482015b82811115612fe3578254825591600101919060010190612fc8565b5b509050612ff19190613060565b5090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b5b80821115613079576000816000905550600101613061565b5090565b600061309061308b84613c89565b613c64565b9050828152602081018484840111156130ac576130ab6140bd565b5b6130b7848285613ed5565b509392505050565b60006130d26130cd84613cba565b613c64565b9050828152602081018484840111156130ee576130ed6140bd565b5b6130f9848285613ed5565b509392505050565b600081359050613110816141d0565b92915050565b60008083601f84011261312c5761312b6140b3565b5b8235905067ffffffffffffffff811115613149576131486140ae565b5b602083019150836001820283011115613165576131646140b8565b5b9250929050565b600082601f830112613181576131806140b3565b5b813561319184826020860161307d565b91505092915050565b600082601f8301126131af576131ae6140b3565b5b81356131bf8482602086016130bf565b91505092915050565b6000813590506131d7816141e7565b92915050565b6000602082840312156131f3576131f26140c7565b5b600061320184828501613101565b91505092915050565b60008060408385031215613221576132206140c7565b5b600061322f85828601613101565b9250506020613240858286016131c8565b9150509250929050565b60008060208385031215613261576132606140c7565b5b600083013567ffffffffffffffff81111561327f5761327e6140c2565b5b61328b85828601613116565b92509250509250929050565b6000602082840312156132ad576132ac6140c7565b5b600082013567ffffffffffffffff8111156132cb576132ca6140c2565b5b6132d78482850161316c565b91505092915050565b6000602082840312156132f6576132f56140c7565b5b6000613304848285016131c8565b91505092915050565b60008060008060808587031215613327576133266140c7565b5b6000613335878288016131c8565b945050602085013567ffffffffffffffff811115613356576133556140c2565b5b6133628782880161319a565b935050604085013567ffffffffffffffff811115613383576133826140c2565b5b61338f8782880161319a565b925050606085013567ffffffffffffffff8111156133b0576133af6140c2565b5b6133bc8782880161319a565b91505092959194509250565b600080604083850312156133df576133de6140c7565b5b60006133ed858286016131c8565b92505060206133fe858286016131c8565b9150509250929050565b60006134148383613450565b60208301905092915050565b600061342c838361377f565b60c08301905092915050565b600061344483836137fa565b60e08301905092915050565b61345981613e8d565b82525050565b61346881613e8d565b82525050565b600061347982613d30565b6134838185613d8e565b935061348e83613ceb565b8060005b838110156134bf5781516134a68882613408565b97506134b183613d67565b925050600181019050613492565b5085935050505092915050565b60006134d782613d3b565b6134e18185613d9f565b93506134ec83613cfb565b8060005b8381101561351d5781516135048882613420565b975061350f83613d74565b9250506001810190506134f0565b5085935050505092915050565b600061353582613d46565b61353f8185613db0565b935061354a83613d0b565b8060005b8381101561357b5781516135628882613438565b975061356d83613d81565b92505060018101905061354e565b5085935050505092915050565b61359181613e9f565b82525050565b6135a081613e9f565b82525050565b60006135b182613d51565b6135bb8185613dc1565b93506135cb818560208601613ee4565b6135d4816140cc565b840191505092915050565b60006135ea82613d5c565b6135f48185613dd2565b9350613604818560208601613ee4565b61360d816140cc565b840191505092915050565b600061362382613d5c565b61362d8185613de3565b935061363d818560208601613ee4565b613646816140cc565b840191505092915050565b6000815461365e81613f17565b6136688186613df4565b945060018216600081146136835760018114613694576136c7565b60ff198316865281860193506136c7565b61369d85613d1b565b60005b838110156136bf578154818901526001820191506020810190506136a0565b838801955050505b50505092915050565b60006136dd600a83613de3565b91506136e8826140dd565b602082019050919050565b6000613700600483613df4565b915061370b82614106565b600482019050919050565b6000613723602383613de3565b915061372e8261412f565b604082019050919050565b6000613746600483613df4565b91506137518261417e565b600482019050919050565b6000613769600a83613de3565b9150613774826141a7565b602082019050919050565b60c0820160008201516137956000850182613450565b5060208201516137a86020850182613450565b5060408201516137bb604085018261394d565b5060608201516137ce606085018261394d565b5060808201516137e1608085018261394d565b5060a08201516137f460a0850182613588565b50505050565b60e0820160008201516138106000850182613450565b5060208201516138236020850182613450565b506040820151613836604085018261394d565b506060820151613849606085018261394d565b50608082015161385c608085018261394d565b5060a082015161386f60a085018261394d565b5060c082015161388260c0850182613588565b50505050565b6000610100830160008301516138a16000860182613450565b50602083015184820360208601526138b982826135df565b915050604083015184820360408601526138d382826135df565b91505060608301516138e8606086018261394d565b506080830151848203608086015261390082826135df565b91505060a083015184820360a086015261391a82826135df565b91505060c083015161392f60c0860182613588565b5060e083015161394260e0860182613588565b508091505092915050565b61395681613ecb565b82525050565b61396581613ecb565b82525050565b60006139778284613651565b915081905092915050565b600061398d826136f3565b9150819050919050565b60006139a282613739565b9150819050919050565b60006020820190506139c1600083018461345f565b92915050565b600060c0820190506139dc600083018961345f565b6139e9602083018861345f565b6139f6604083018761395c565b613a03606083018661395c565b613a10608083018561395c565b613a1d60a0830184613597565b979650505050505050565b600060e082019050613a3d600083018a61345f565b613a4a602083018961345f565b613a57604083018861395c565b613a64606083018761395c565b613a71608083018661395c565b613a7e60a083018561395c565b613a8b60c0830184613597565b98975050505050505050565b600061010082019050613aad600083018b61345f565b8181036020830152613abf818a613618565b90508181036040830152613ad38189613618565b9050613ae2606083018861395c565b8181036080830152613af48187613618565b905081810360a0830152613b088186613618565b9050613b1760c0830185613597565b613b2460e0830184613597565b9998505050505050505050565b60006020820190508181036000830152613b4b818461346e565b905092915050565b60006020820190508181036000830152613b6d81846134cc565b905092915050565b60006020820190508181036000830152613b8f818461352a565b905092915050565b6000604082019050613bac6000830185613597565b8181036020830152613bbe81846135a6565b90509392505050565b60006020820190508181036000830152613be0816136d0565b9050919050565b60006020820190508181036000830152613c0081613716565b9050919050565b60006020820190508181036000830152613c208161375c565b9050919050565b60006020820190508181036000830152613c418184613888565b905092915050565b6000602082019050613c5e600083018461395c565b92915050565b6000613c6e613c7f565b9050613c7a8282613f49565b919050565b6000604051905090565b600067ffffffffffffffff821115613ca457613ca361407f565b5b613cad826140cc565b9050602081019050919050565b600067ffffffffffffffff821115613cd557613cd461407f565b5b613cde826140cc565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613e0a82613ecb565b9150613e1583613ecb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613e4e57613e4d613fc3565b5b828202905092915050565b6000613e6482613ecb565b9150613e6f83613ecb565b925082821015613e8257613e81613fc3565b5b828203905092915050565b6000613e9882613eab565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015613f02578082015181840152602081019050613ee7565b83811115613f11576000848401525b50505050565b60006002820490506001821680613f2f57607f821691505b60208210811415613f4357613f42614021565b5b50919050565b613f52826140cc565b810181811067ffffffffffffffff82111715613f7157613f7061407f565b5b80604052505050565b6000613f8582613ecb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613fb857613fb7613fc3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e4f542041205553455200000000000000000000000000000000000000000000600082015250565b7f5573657200000000000000000000000000000000000000000000000000000000600082015250565b7f446f65736e2774206d65657420726571756972656d656e7420666f722055704b60008201527f6565700000000000000000000000000000000000000000000000000000000000602082015250565b7f486f737400000000000000000000000000000000000000000000000000000000600082015250565b7f4e4f54204120484f535400000000000000000000000000000000000000000000600082015250565b6141d981613e8d565b81146141e457600080fd5b50565b6141f081613ecb565b81146141fb57600080fd5b5056fea264697066735822122065d5ba90547b8720dd31adda8c77ea682f6f8123a0cd01ad7c04dc1a5aefaaa564736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "becomeVolun()": {
        "details": "This function `createVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode on, thereby making the profile avaliable for campaign "
      },
      "checkUpkeep(bytes)": {
        "details": "This is the function that the Chainlink Keeper nodes call they look for `upkeepNeeded` to return True. the following should be true for this to return true: 1. It makes sure that the campaign or meeting is not yet completed 2. The time interval has passed for either meeting or campaign."
      },
      "constructor": {
        "details": "constructor used to assign values that will not change"
      },
      "createCampaign()": {
        "details": "This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign"
      },
      "createHost(uint256,string,string,string)": {
        "details": "This function `createHost` any body can call this functions and the senders profile would be set to that of a `Host`"
      },
      "createSchedule(uint256,uint256)": {
        "details": "This function `createSchedule` allows only the Host to call it hence the `OnlyHost` modifier after which a Host can create a meeting with some parameters like time and fee needed"
      },
      "createUser(uint256,string,string,string)": {
        "details": "This function `createUser` any body can call this functions and the senders profile would be set to that of a `User`"
      },
      "endCampaign(address,uint256)": {
        "details": "This function `createCampaign` allows only the User to call it hence the `OnlyUser` modifier after which any avaliable volunteer would be assigned to the campaign"
      },
      "joinMeeting(address,uint256)": {
        "details": "This function `joinMeeting` allows only the User to call it hence the `OnlyUser` modifier after which the meeting ID is specified and the user would be assigned to the meeting"
      },
      "performUpkeep(bytes)": {
        "details": "Once `checkUpkeep` is returning `true`, this function is called"
      },
      "unVolun()": {
        "details": "This function `unVolun` allows only the Host to call it hence the `OnlyHost` modifier A host can toggle being a volunteer for campaign mode off, thereby making the profile unavaliable for campaign "
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "meetingNum()": {
        "notice": "Getter Functions "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "counter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "i_interval",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 27,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "v_lastTimeStamp",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 32,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "userType",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 35,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "hostType",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 38,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "volunType",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 44,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "Campaign",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_struct(campaign)126_storage)dyn_storage)"
      },
      {
        "astId": 50,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "Meeting",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(meeting)113_storage)dyn_storage)"
      },
      {
        "astId": 52,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "campaignIndex",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 54,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "meetingIndex",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "UserProfile",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_struct(profile)98_storage)"
      },
      {
        "astId": 64,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "s_xtelpState",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_enum(XTELPState)21)"
      },
      {
        "astId": 69,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "volunState",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_enum(XTELPState)21)"
      },
      {
        "astId": 72,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllHost",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 75,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllVolun",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 78,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "AllUser",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 81,
        "contract": "contracts/XTELPT.sol:XTELPT",
        "label": "recentCampaignCreator",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(campaign)126_storage)dyn_storage": {
        "base": "t_struct(campaign)126_storage",
        "encoding": "dynamic_array",
        "label": "struct XTELPT.campaign[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(meeting)113_storage)dyn_storage": {
        "base": "t_struct(meeting)113_storage",
        "encoding": "dynamic_array",
        "label": "struct XTELPT.meeting[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(XTELPState)21": {
        "encoding": "inplace",
        "label": "enum XTELPT.XTELPState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(campaign)126_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.campaign[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(campaign)126_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(meeting)113_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.meeting[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(meeting)113_storage)dyn_storage"
      },
      "t_mapping(t_address,t_enum(XTELPState)21)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum XTELPT.XTELPState)",
        "numberOfBytes": "32",
        "value": "t_enum(XTELPState)21"
      },
      "t_mapping(t_address,t_struct(profile)98_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XTELPT.profile)",
        "numberOfBytes": "32",
        "value": "t_struct(profile)98_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(campaign)126_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.campaign",
        "members": [
          {
            "astId": 115,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "volunteer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 117,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 119,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "start_time",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 121,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "end_time",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 123,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "fee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 125,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "completed",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(meeting)113_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.meeting",
        "members": [
          {
            "astId": 100,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "host",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 102,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 104,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "start",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 106,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "end",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 108,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "time",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 110,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "fee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 112,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "completed",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(profile)98_storage": {
        "encoding": "inplace",
        "label": "struct XTELPT.profile",
        "members": [
          {
            "astId": 83,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 85,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 87,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "role",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 89,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "rating",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 91,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "bio",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 93,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "profilePic",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 95,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "avaliable",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 97,
            "contract": "contracts/XTELPT.sol:XTELPT",
            "label": "volun",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}